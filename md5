#server
import hashlib

def calculate_md5(input_string):
    # Encode the input string to bytes
    input_bytes = input_string.encode('utf-8')

    # Create an MD5 hash object
    md5_hash = hashlib.md5()

    # Update hash object with the input bytes
    md5_hash.update(input_bytes)

    # Get the hexadecimal representation of the hash
    hashed_str = md5_hash.hexdigest()

    return hashed_str

import socket


HOST = '127.0.0.1'
PORT = 9999

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:
    server_socket.bind((HOST, PORT))
    server_socket.listen()
    print(f'Server started. Listening on {HOST}:{PORT}')
    
    while True:
        conn, addr = server_socket.accept()
        with conn:
            print(f'Connected by {addr}')
            while True:
                data = conn.recv(1024)
                if not data:
                    break
                print(f'Client: {data.decode()}')
                pt=data.decode()
                conn.sendall((calculate_md5(pt)).encode())
                if data.decode().lower() == 'bye':
                    break
            print(f'Client {addr} disconnected')



#client
import socket


HOST = '127.0.0.1'
PORT = 9999

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket:
    client_socket.connect((HOST, PORT))
    print(f'Connected to {HOST}:{PORT}. Type "bye" to exit.')
    
    while True:
        message = input("You: ")
        client_socket.sendall(message.encode())
        data = client_socket.recv(1024)
        print(f'Server: {data.decode()}')
        if message.lower() == 'bye':
            break
            
